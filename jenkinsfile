 node{
 
 def mavenHome = tool name : "maven3.8.4"
 
 properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')), [$class: 'JobLocalConfiguration', changeReasonComment: ''], pipelineTriggers([pollSCM('* * * * *')])])
 
 echo "Job name is: ${env.JOB_NAME} "
 echo "Node name is: ${env.NODE_NAME} "
 echo "Build number is: ${env.BUILD_NUMBER} "
 
 
 
 stage('checkoutCode')
 {
 git branch: 'development', credentialsId: '17adbaf8-761e-4e2d-9a31-d33294e12aa4', url: 'https://github.com/SutejDevops/maven-web-application.git'
 }

 stage('Build')
 {
 sh "${mavenHome}/bin/mvn clean package"
 }
 /*
 stage('ExecuteSoanarQubeReport')
 {
 sh "${mavenHome}/bin/mvn sonar:sonar"
 } 
 
 stage('UploadArtifactIntoNexus')
 {
 sh "${mavenHome}/bin/mvn deploy"
 } 
 
 stage('DeployAppIntoTomcatServer')
 {
 sshagent(['140d2811-756e-4213-914a-9ec66afddacf']) {
  sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@172.31.38.38:/opt/apache-tomcat-9.0.64/webapps"
 }
 }
 */
 }
 catch(e){
 currentBuild.result= "FAILED"
     throw e
 }
 finally{
 sendSlackNotifications(currentBuild.result)
 }
 
 }//Node closing
  
 //Below code will use for send slack build notifications
  def sendSlackNotifications(String buildStatus = 'STARTED') {
  
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}
